{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n// Elements\nconst form = document.querySelector('.form');\n\n// Event listener for form submission\nform.addEventListener('submit', function (event) {\nevent.preventDefault();\n\n  // Get user inputs\nconst delayInput = parseInt(form.querySelector('input[name=\"delay\"]').value, 10);\nconst stateInput = form.querySelector('input[name=\"state\"]:checked').value;\n\n  // Create a promise\nconst notificationPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (stateInput === 'fulfilled') {\n        resolve(delayInput);\n    } else {\n        reject(delayInput);\n    }\n    }, delayInput);\n});\n\n  // Handle the promise\nnotificationPromise.then(\n    (delay) => {\n    iziToast.success({\n        title: 'Fulfilled promise',\n        message: `✅ Fulfilled promise in ${delay}ms`,\n    });\n    },\n    (delay) => {\n    iziToast.error({\n        title: 'Rejected promise',\n        message: `❌ Rejected promise in ${delay}ms`,\n    });\n    }\n);\n});\n"],"names":["form","event","delayInput","stateInput","resolve","reject","delay","iziToast"],"mappings":"oFAIA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAG3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAO,CACjDA,EAAM,eAAc,EAGpB,MAAMC,EAAa,SAASF,EAAK,cAAc,qBAAqB,EAAE,MAAO,EAAE,EACzEG,EAAaH,EAAK,cAAc,6BAA6B,EAAE,MAGzC,IAAI,QAAQ,CAACI,EAASC,IAAW,CACzD,WAAW,IAAM,CACbF,IAAe,YACfC,EAAQF,CAAU,EAElBG,EAAOH,CAAU,CAEpB,EAAEA,CAAU,CACjB,CAAC,EAGmB,KACfI,GAAU,CACXC,EAAS,QAAQ,CACb,MAAO,oBACP,QAAS,0BAA0BD,CAAK,IAChD,CAAK,CACA,EACAA,GAAU,CACXC,EAAS,MAAM,CACX,MAAO,mBACP,QAAS,yBAAyBD,CAAK,IAC/C,CAAK,CACA,CACL,CACA,CAAC"}